About MongoDB :
==== ========
---->> MongoDB is a general purpose, document-based, distributed database built for              modern application developers and for the cloud era.

---->> MongoDB is a document database, which means it stores data in JSON-like documents. 
---->> We believe this is the most natural way to think about data, and is much more             expressive and powerful than the traditional row/column model.
 

for example,

{
  "_id": "5cf0029caff5056591b0ce7d",
  "firstname": "Jane",
  "lastname": "Wu",
  "address": {
    "street": "1 Circle Rd",
    "city": "Los Angeles",
    "state": "CA",
    "zip": "90404"
  },
  "hobbies": ["surfing", "coding"]
}


---->> MongoDB Atlas - the global cloud database

---->> MongoDB Atlas is the multi-cloud database service for MongoDB available on AWS,        Google Cloud, and Azure. Best-in-class automation and built-in proven practices        provide continuous availability



Integrating Django with MongoDB
==========  ===============

Use MongoDB as a backend database for your Django project, without changing the Django ORM. 

Use Django Admin to add and modify documents in MongoDB. Start using Django with MongoDB by adding doing just like bellow.

step 1 :  pip install djongo

step 2 :  Into settings.py file of your project, add:

   DATABASES = {
       'default': {
           'ENGINE': 'djongo',
           'NAME': 'your-db-name',
       }
   }


djongo  module
=====   =======
Django SQL to MongoDB connector — Djongo: The strategy is to translate Django SQL query syntax generated by the Django ORM into pymongo commands. 

Djongo is a SQL to MongoDB query compiler. It translates every SQL query string into a mongoDB query document.

SQL syntax will never change regardless of future additions to Django, by using a connector instead of a different ORM, your project will work on all versions of Django.

